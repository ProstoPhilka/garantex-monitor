services:
#GM
  garantex-monitor:
    build: ./
    container_name: garantex-monitor
    ports:
    - "${PORT}:${PORT}"
    - "8080:8080"
    networks:
    - skynet
    depends_on:
      db:
        condition: service_healthy
#DB
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
    - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    networks:
    - skynet
#JAEGER  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    hostname: jaeger
    ports:
      #- "14268:14268" # HTTP endpoint for the collector
      - "16686:16686" # Jaeger UI
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
    - skynet
#PROMETHEUS 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - skynet
networks:
  skynet:
    driver: bridge